Assignment 1 GR6901

Daniel Lee

Question 1
How many earthquakes are listed in the table?
Command: wc -l signif.txt.tsv 
Number of earthquakes listed: 5958
Using wc -l signif.txt.tsv gives me the 5959 lines. Removing the first line which is the header.


Question 2 
How many columns are in the table?
Commmand: head -n1 signif.txt.tsv | awk '{print NF}'
Number of columns: 47
head -n1 gives us the first line from our file. print NF prints the number of fields which is the number of column entries.

Question 3
Use the cut command to create a new file that just has the data from the columns for YEAR, EQ_PRIMARY and COUNTRY. Hint: you can get the column numbers by using the head command to view the first row and then visually count the column numbers for the above fields (there is also a unix command to do this, but we didn't cover it in class). Call the new data file 'Year_Mag_Country.tsv'. You can use 'Year_Mag_Country.tsv' for the rest of the exercises below.

Command: cut -f3,10,18 signif.txt.tsv > Year_Mag_Country.tsv 
It cuts 3, 10 and 18 field which are YEAR, EQ_PRIMARY and COUNTRY into a new file name Year_Mag_Country.tsv and sort it by smallest Year to largest Year


Question 4

EQ_PRIMARY is the assigned earthquake magnitude. With your new file 'Year_Mag_Country.tsv', sort the data based on the numeric value of the EQ_PRIMARY column, then list the lines for the top ten largest earthquakes.

Command:
awk 'NR==1' Year_Mag_Country.tsv  > temp_YMC_header.tsv 
sed '1d' Year_Mag_Country.tsv > temp_YMC_body.tsv
sort -k2nr  temp_YMC_body.tsv > temp_YMC_body_sorted.tsv 
cat temp_YMC_header.tsv temp_YMC_body_sorted.tsv >| Year_Mag_Country.tsv
head -11 Year_Mag_Country.tsv


Answer:
YEAR    EQ_PRIMARY      COUNTRY
1960     9.5    CHILE
1964     9.2    USA
2004     9.1    INDONESIA
2011     9.1    JAPAN
1700     9.0    USA
1952     9.0    RUSSIA
1716     8.8    PERU
1812     8.8    USA
2010     8.8    CHILE
1513     8.7    PERU

First extract the headers.
Second remove the header and create a body text
Third sort by the 2nd column which is the magnitude. 'r' reverses the sorting allowing the largest value be at the top.
Fourth combine both files to replace.
Fifth print the first 11 rows which is the top ten earthquakes with header


Question 5
How many unique countries are listed in the database? Use cut,sort,uniq, wc and a few pipes | to form a single expression that answers this question.

Command:
cut -f 3 Year_Mag_Country.tsv | sed '1d' | sort | uniq | wc -l

153 different countries.

Extract the Country column. Remove the header. Sort as uniq requires duplicates to be adjacent to one another and uniq to find the unique entries.


Question 6
Use the grep command to count how many earthquakes in the database are located in the USA or USA TERRITORY

Command:
cut -f 3 Year_Mag_Country.tsv | sed '1d' | grep -c 'USA'

Extract the Country column. Remove the header and count the occurences of USA which include TERRITORY. 294 USA or USA TERRITORY


Question 7
Expanding on the previous exercise, refine your command sequence so that it only counts earthquakes in the USA and not ones in USA TERRITORY. Hint: use the -v argument with grep and you may need to call grep more than once

Command:
cut -f 3 Year_Mag_Country.tsv | sed '1d' | grep -c -x 'USA'

-x allows for a direct match of the string to grep. multiple grep and -v not necessary.
255 entries.


Question 8
Compute the total number of earthquakes in each country and then display the top ten countries along with the number of earthquakes. Hint: this can be done with a command sequence similar to exercise 5, but requires a specific argument to be used with uniq.

Command:
cut -f 3 Year_Mag_Country.tsv | sed '1d' | sort | uniq -c | sort -k1nr | head -10

To build on to question 5, -c counts the number of repeated entries in the uniq. Sort the first column numerically and reverse the sort. Largest number at the top. head 10 displays the top 10.

    579 CHINA
    400 JAPAN
    365 IRAN
    363 INDONESIA
    324 ITALY
    319 TURKEY
    259 GREECE
    255 USA
    207 PHILIPPINES
    193 MEXICO

Question 9
Create a shell script named countEq.sh that returns the total number of earthquakes for a given country, where the country is specified as the option when calling the script. Hint: see the Shell Script notes and use the special variable $1. Paste your script below and give an example calling sequence for country USA.

Shell Script:

#!/bin/bash

if [ "$#" -ne 1 ]; then
    echo "Usage: $0 <country>"
    exit 1
fi

country="$1"

if [ ! -e "Year_Mag_Country.tsv" ]; then
    echo "Error: Year_Mag_Country.tsv does not exist"
    exit 1
fi

total_eq=$(awk -F'\t' -v country="$country" '$3 == country {sum += 1} END {print sum}' Year_Mag_Country.tsv)

echo "Total number of earthquakes in $country: $total_eq"


chmod u+x countEq.sh
./countEq.sh USA
Total number of earthquakes in USA: 255



Question 10
Create a shell script named countEq_getLargestEq.sh that returns both the total number of earthquakes AND the largest earthquake for a given country, where the country is specified as the option when calling the script. Use the echo command before each command to create labels for each returned value. Paste your script below and give an example calling sequence for country CHILE.

Shell Script:
#!/bin/bash


if [ "$#" -ne 1 ]; then
    echo "Usage: $0 <country>"
    exit 1
fi

country="$1"

file="Year_Mag_Country.tsv"

if [ ! -f "$file" ]; then
    echo "Error: File 'Year_Mag_Country.tsv' does not exist"
    exit 1
fi

total_earthquakes=$(awk -F'\t' -v country="$country" '$3 == country {sum+=1} END {print sum}' "$file")
echo "Total Earthquakes for $country: $total_earthquakes"


largest_earthquake=$(awk -F'\t' -v country="$country" '$3 == country{print $2}' "$file" | sort -nr | head -n 1)
echo "Largest Earthquake Magnitude for $country: $largest_earthquake" 


Similar to question 10, we count the number of eq that matches the input string. For the largest_earthquake, we extract that row that matches the string but extract the magnitude instead. Sort the magntiude in reverse (so largest on top). Head give us the top line and echo it to print.

Command:

chmod u+x countEq_getLargestEq.sh
./countEq_getLargestEq.sh CHILE

Total Earthquakes for CHILE: 192
Largest Earthquake Magnitude for CHILE:  9.5

Question 11
Compute the total number of earthquakes each year and then output a sorted list of the top ten years with the most earthquakes. Paste your command and the top ten list below.

Command:
cut -f 1 Year_Mag_Country.tsv | sed '1d' | sort | uniq -c | sort -k1nr | head -10

     78 2004
     77 2008
     72 2003
     67 2007
     62 2010
     61 2006
     60 2002
     60 2005
     60 2009
     59 2011

Question 12
Create a shell script that loops over the top ten years with the most earthquakes (from exercise 11), finds all the earthquakes for a given year and writes them to file named $YEAR-earthquakes.txt, where $YEAR is the for loop variable assigned from the top ten list. Your code should output ten different files (one for each year in the top ten list). Hints: Take your answer from exercise 11 and extract the year column, then use this for the range in a for loop by inserting them like this for YEAR in $(insert code that lists top ten years here). The rest is just a grep and a redirect > to a file with the correct name.

Command:
cut -f 1 Year_Mag_Country.tsv | sed '1d' | sort | uniq -c | sort -k1nr | head -10 | awk '{print $2}' > loopfile.tsv
vi eq_loop.sh


Shell Script:

#!/bin/bash


if [ ! -e "Year_Mag_Country.tsv" ]; then
    echo "Error: Year_Mag_Country.tsv does not exist"
    exit 1
fi
data_file="Year_Mag_Country.tsv"

if [ ! -e "loopfile.tsv" ]; then
    echo "Error: loopfile.tsv does not exist"
    exit 1
fi
loop_file="loopfile.tsv"

years=$(sort -nr "$loop_file")

for YEAR in $years; do
    # Find earthquakes for the current year and write to file
    grep "^$YEAR[[:space:]]" "$data_file" > "$YEAR-earthquakes.txt"
    echo "Earthquakes for $YEAR written to $YEAR-earthquakes.txt"
done


Command:
chmod u+x eq_loop.sh
./eq_loop.sh


with reference to question 8, changing it to sort based on years instead.then count number of unique years. extract the years from the top 10 years into loopfile.tsv
create a new eq_loop.sh shell script
give permission for the shellscript then execute it. 
